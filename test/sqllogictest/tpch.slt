# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# PRIMARY KEY annotations (which are in the spec) are currently
# removed from this slt, because we don't support them at the moment.
# (Note that _in slts_ they are actually supported, but it's better
# to match the plans of real runs more closely.)

statement ok
CREATE TABLE nation (
    n_nationkey  integer,
    n_name       char(25) NOT NULL,
    n_regionkey  integer NOT NULL,
    n_comment    varchar(152)
)

statement ok
CREATE INDEX pk_nation_nationkey ON nation (n_nationkey ASC)

statement ok
CREATE INDEX fk_nation_regionkey ON nation (n_regionkey ASC)

statement ok
CREATE TABLE region  (
    r_regionkey  integer,
    r_name       char(25) NOT NULL,
    r_comment    varchar(152)
)

statement ok
CREATE INDEX pk_region_regionkey ON region (r_regionkey ASC)

statement ok
CREATE TABLE part (
    p_partkey     integer,
    p_name        varchar(55) NOT NULL,
    p_mfgr        char(25) NOT NULL,
    p_brand       char(10) NOT NULL,
    p_type        varchar(25) NOT NULL,
    p_size        integer NOT NULL,
    p_container   char(10) NOT NULL,
    p_retailprice decimal(15, 2) NOT NULL,
    p_comment     varchar(23) NOT NULL
)

statement ok
CREATE INDEX pk_part_partkey ON part (p_partkey ASC)

statement ok
CREATE TABLE supplier (
    s_suppkey     integer,
    s_name        char(25) NOT NULL,
    s_address     varchar(40) NOT NULL,
    s_nationkey   integer NOT NULL,
    s_phone       char(15) NOT NULL,
    s_acctbal     decimal(15, 2) NOT NULL,
    s_comment     varchar(101) NOT NULL
)

statement ok
CREATE INDEX pk_supplier_suppkey ON supplier (s_suppkey ASC)

statement ok
CREATE INDEX fk_supplier_nationkey ON supplier (s_nationkey ASC)

statement ok
CREATE TABLE partsupp (
    ps_partkey     integer NOT NULL,
    ps_suppkey     integer NOT NULL,
    ps_availqty    integer NOT NULL,
    ps_supplycost  decimal(15, 2) NOT NULL,
    ps_comment     varchar(199) NOT NULL
)

statement ok
CREATE INDEX pk_partsupp_partkey_suppkey ON partsupp (ps_partkey ASC, ps_suppkey ASC)

statement ok
CREATE INDEX fk_partsupp_partkey ON partsupp (ps_partkey ASC)

statement ok
CREATE INDEX fk_partsupp_suppkey ON partsupp (ps_suppkey ASC)

statement ok
CREATE TABLE customer (
    c_custkey     integer,
    c_name        varchar(25) NOT NULL,
    c_address     varchar(40) NOT NULL,
    c_nationkey   integer NOT NULL,
    c_phone       char(15) NOT NULL,
    c_acctbal     decimal(15, 2) NOT NULL,
    c_mktsegment  char(10) NOT NULL,
    c_comment     varchar(117) NOT NULL
)

statement ok
CREATE INDEX pk_customer_custkey ON customer (c_custkey ASC)

statement ok
CREATE INDEX fk_customer_nationkey ON customer (c_nationkey ASC)

statement ok
CREATE TABLE orders (
    o_orderkey       integer,
    o_custkey        integer NOT NULL,
    o_orderstatus    char(1) NOT NULL,
    o_totalprice     decimal(15, 2) NOT NULL,
    o_orderdate      DATE NOT NULL,
    o_orderpriority  char(15) NOT NULL,
    o_clerk          char(15) NOT NULL,
    o_shippriority   integer NOT NULL,
    o_comment        varchar(79) NOT NULL
)

statement ok
CREATE INDEX pk_orders_orderkey ON orders (o_orderkey ASC)

statement ok
CREATE INDEX fk_orders_custkey ON orders (o_custkey ASC)

statement ok
CREATE TABLE lineitem (
    l_orderkey       integer NOT NULL,
    l_partkey        integer NOT NULL,
    l_suppkey        integer NOT NULL,
    l_linenumber     integer NOT NULL,
    l_quantity       decimal(15, 2) NOT NULL,
    l_extendedprice  decimal(15, 2) NOT NULL,
    l_discount       decimal(15, 2) NOT NULL,
    l_tax            decimal(15, 2) NOT NULL,
    l_returnflag     char(1) NOT NULL,
    l_linestatus     char(1) NOT NULL,
    l_shipdate       date NOT NULL,
    l_commitdate     date NOT NULL,
    l_receiptdate    date NOT NULL,
    l_shipinstruct   char(25) NOT NULL,
    l_shipmode       char(10) NOT NULL,
    l_comment        varchar(44) NOT NULL
)

statement ok
CREATE INDEX pk_lineitem_orderkey_linenumber ON lineitem (l_orderkey ASC, l_linenumber ASC)

statement ok
CREATE INDEX fk_lineitem_orderkey ON lineitem (l_orderkey ASC)

statement ok
CREATE INDEX fk_lineitem_partkey ON lineitem (l_partkey ASC)

statement ok
CREATE INDEX fk_lineitem_suppkey ON lineitem (l_suppkey ASC)

statement ok
CREATE INDEX fk_lineitem_partsuppkey ON lineitem (l_partkey ASC, l_suppkey ASC)



query T multiline
-- Query 01
EXPLAIN WITH(arity, join_impls) SELECT
	l_returnflag,
	l_linestatus,
	sum(l_quantity) AS sum_qty,
	sum(l_extendedprice) AS sum_base_price,
	sum(l_extendedprice * (1 - l_discount)) AS sum_disc_price,
	sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,
	avg(l_quantity) AS avg_qty,
	avg(l_extendedprice) AS avg_price,
	avg(l_discount) AS avg_disc,
	count(*) AS count_order
FROM
	lineitem
WHERE
	l_shipdate <= DATE '1998-12-01' - INTERVAL '60' day
GROUP BY
	l_returnflag,
	l_linestatus
ORDER BY
	l_returnflag,
	l_linestatus
----
Explained Query:
  Finish order_by=[#0 asc nulls_last, #1 asc nulls_last] output=[#0..=#9]
    Project (#0..=#5, #9..=#11, #6) // { arity: 10 }
      Map (bigint_to_double(case when (#6 = 0) then null else #6 end), (numeric_to_double(#2) / #8), (numeric_to_double(#3) / #8), (numeric_to_double(#7) / #8)) // { arity: 12 }
        Reduce group_by=[#4, #5] aggregates=[sum(#0), sum(#1), sum((#1 * (1 - #2))), sum(((#1 * (1 - #2)) * (1 + #3))), count(*), sum(#2)] // { arity: 8 }
          Project (#4..=#9) // { arity: 6 }
            Filter (date_to_timestamp(#10) <= 1998-10-02 00:00:00) // { arity: 16 }
              Get materialize.public.lineitem // { arity: 16 }

Used Indexes:
  - materialize.public.pk_lineitem_orderkey_linenumber

EOF


query T multiline
-- Query 02
EXPLAIN WITH(arity, join_impls) SELECT
    s_acctbal,
    s_name,
    n_name,
    p_partkey,
    p_mfgr,
    s_address,
    s_phone,
    s_comment
FROM
    part, supplier, partsupp, nation, region
WHERE
    p_partkey = ps_partkey
    AND s_suppkey = ps_suppkey
    AND p_size = CAST (15 AS smallint)
    AND p_type LIKE '%BRASS'
    AND s_nationkey = n_nationkey
    AND n_regionkey = r_regionkey
    AND r_name = 'EUROPE'
    AND ps_supplycost
        = (
                SELECT
                    min(ps_supplycost)
                FROM
                    partsupp, supplier, nation, region
                WHERE
                    p_partkey = ps_partkey
                    AND s_suppkey = ps_suppkey
                    AND s_nationkey = n_nationkey
                    AND n_regionkey = r_regionkey
                    AND r_name = 'EUROPE'
            )
ORDER BY
    s_acctbal DESC, n_name, s_name, p_partkey
----
Explained Query:
  Finish order_by=[#0 desc nulls_first, #2 asc nulls_last, #1 asc nulls_last, #3 asc nulls_last] output=[#0..=#7]
    Return // { arity: 8 }
      Project (#5, #2, #8, #0, #1, #3, #4, #6) // { arity: 8 }
        Join on=(#0 = #9 AND #7 = #10) type=differential // { arity: 11 }
          implementation
            %0:l4[#0, #7] » %1[#0, #1]UKKA
          ArrangeBy keys=[[#0, #7]] // { arity: 9 }
            Get l4 // { arity: 9 }
          ArrangeBy keys=[[#0, #1]] // { arity: 2 }
            Reduce group_by=[#0] aggregates=[min(#1)] // { arity: 2 }
              Project (#0, #4) // { arity: 2 }
                Filter (#18 = "EUROPE") // { arity: 20 }
                  Join on=(#0 = #1 AND #2 = #6 AND #9 = #13 AND #15 = #17) type=delta // { arity: 20 }
                    implementation
                      %0 » %1:l1[#0]KA » %2:l0[#0]KA » %3:l2[#0]KA » %4:l3[#0]KAef
                      %1:l1 » %0[#0]UKA » %2:l0[#0]KA » %3:l2[#0]KA » %4:l3[#0]KAef
                      %2:l0 » %1:l1[#1]KA » %0[#0]UKA » %3:l2[#0]KA » %4:l3[#0]KAef
                      %3:l2 » %4:l3[#0]KAef » %2:l0[#3]KA » %1:l1[#1]KA » %0[#0]UKA
                      %4:l3 » %3:l2[#2]KA » %2:l0[#3]KA » %1:l1[#1]KA » %0[#0]UKA
                    ArrangeBy keys=[[#0]] // { arity: 1 }
                      Distinct group_by=[#0] // { arity: 1 }
                        Project (#0) // { arity: 1 }
                          Get l4 // { arity: 9 }
                    Get l1 // { arity: 5 }
                    Get l0 // { arity: 7 }
                    Get l2 // { arity: 4 }
                    Get l3 // { arity: 3 }
    With
      cte l4 =
        Project (#0, #2, #10, #11, #13..=#15, #19, #22) // { arity: 9 }
          Filter (#5 = 15) AND (#26 = "EUROPE") AND "%BRASS" ~~(varchar_to_text(#4)) // { arity: 28 }
            Join on=(#0 = #16 AND #9 = #17 AND #12 = #21 AND #23 = #25) type=delta // { arity: 28 }
              implementation
                %0:part » %2:l1[#0]KA » %1:l0[#0]KA » %3:l2[#0]KA » %4:l3[#0]KAef
                %1:l0 » %2:l1[#1]KA » %0:part[#0]KAelf » %3:l2[#0]KA » %4:l3[#0]KAef
                %2:l1 » %0:part[#0]KAelf » %1:l0[#0]KA » %3:l2[#0]KA » %4:l3[#0]KAef
                %3:l2 » %4:l3[#0]KAef » %1:l0[#3]KA » %2:l1[#1]KA » %0:part[#0]KAelf
                %4:l3 » %3:l2[#2]KA » %1:l0[#3]KA » %2:l1[#1]KA » %0:part[#0]KAelf
              ArrangeBy keys=[[#0]] // { arity: 9 }
                Get materialize.public.part // { arity: 9 }
              Get l0 // { arity: 7 }
              Get l1 // { arity: 5 }
              Get l2 // { arity: 4 }
              Get l3 // { arity: 3 }
      cte l3 =
        ArrangeBy keys=[[#0]] // { arity: 3 }
          Get materialize.public.region // { arity: 3 }
      cte l2 =
        ArrangeBy keys=[[#0], [#2]] // { arity: 4 }
          Get materialize.public.nation // { arity: 4 }
      cte l1 =
        ArrangeBy keys=[[#0], [#1]] // { arity: 5 }
          Get materialize.public.partsupp // { arity: 5 }
      cte l0 =
        ArrangeBy keys=[[#0], [#3]] // { arity: 7 }
          Get materialize.public.supplier // { arity: 7 }

Used Indexes:
  - materialize.public.pk_nation_nationkey
  - materialize.public.fk_nation_regionkey
  - materialize.public.pk_region_regionkey
  - materialize.public.pk_part_partkey
  - materialize.public.pk_supplier_suppkey
  - materialize.public.fk_supplier_nationkey
  - materialize.public.fk_partsupp_partkey
  - materialize.public.fk_partsupp_suppkey

EOF

